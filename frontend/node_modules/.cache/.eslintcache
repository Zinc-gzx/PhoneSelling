[{"D:\\comp5347Assignment2\\5347Test\\Lab02-Tue-Group02\\frontend\\src\\index.js":"1","D:\\comp5347Assignment2\\5347Test\\Lab02-Tue-Group02\\frontend\\src\\App.js":"2","D:\\comp5347Assignment2\\5347Test\\Lab02-Tue-Group02\\frontend\\src\\reportWebVitals.js":"3","D:\\comp5347Assignment2\\5347Test\\Lab02-Tue-Group02\\frontend\\src\\pages\\Setup.js":"4","D:\\comp5347Assignment2\\5347Test\\Lab02-Tue-Group02\\frontend\\src\\pages\\Login.js":"5","D:\\comp5347Assignment2\\5347Test\\Lab02-Tue-Group02\\frontend\\src\\pages\\Verify.js":"6","D:\\comp5347Assignment2\\5347Test\\Lab02-Tue-Group02\\frontend\\src\\pages\\ResetPassword.js":"7","D:\\comp5347Assignment2\\5347Test\\Lab02-Tue-Group02\\frontend\\src\\pages\\ResetEmail.js":"8","D:\\comp5347Assignment2\\5347Test\\Lab02-Tue-Group02\\frontend\\src\\pages\\Checkout.js":"9","D:\\comp5347Assignment2\\5347Test\\Lab02-Tue-Group02\\frontend\\src\\pages\\Home.js":"10","D:\\comp5347Assignment2\\5347Test\\Lab02-Tue-Group02\\frontend\\src\\components\\SearchBar.js":"11","D:\\comp5347Assignment2\\5347Test\\Lab02-Tue-Group02\\frontend\\src\\components\\ItemState.js":"12","D:\\comp5347Assignment2\\5347Test\\Lab02-Tue-Group02\\frontend\\src\\pages\\store.js":"13"},{"size":552,"mtime":1683866934415,"results":"14","hashOfConfig":"15"},{"size":1517,"mtime":1684054022114,"results":"16","hashOfConfig":"15"},{"size":375,"mtime":1683866934417,"results":"17","hashOfConfig":"15"},{"size":2126,"mtime":1684040230134,"results":"18","hashOfConfig":"15"},{"size":1816,"mtime":1684040230132,"results":"19","hashOfConfig":"15"},{"size":1485,"mtime":1684040230134,"results":"20","hashOfConfig":"15"},{"size":1682,"mtime":1684040230134,"results":"21","hashOfConfig":"15"},{"size":1429,"mtime":1684040230132,"results":"22","hashOfConfig":"15"},{"size":6594,"mtime":1684061341856,"results":"23","hashOfConfig":"15"},{"size":2887,"mtime":1684057908592,"results":"24","hashOfConfig":"15"},{"size":3914,"mtime":1684040230130,"results":"25","hashOfConfig":"15"},{"size":6685,"mtime":1684060322049,"results":"26","hashOfConfig":"15"},{"size":581,"mtime":1684059350343,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"y1tn38",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"31"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"31"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"31"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"31"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"31"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"31"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"D:\\comp5347Assignment2\\5347Test\\Lab02-Tue-Group02\\frontend\\src\\index.js",[],[],[],"D:\\comp5347Assignment2\\5347Test\\Lab02-Tue-Group02\\frontend\\src\\App.js",[],[],"D:\\comp5347Assignment2\\5347Test\\Lab02-Tue-Group02\\frontend\\src\\reportWebVitals.js",[],[],"D:\\comp5347Assignment2\\5347Test\\Lab02-Tue-Group02\\frontend\\src\\pages\\Setup.js",["75"],[],"import React, { useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Link from '@mui/material/Link';\r\nimport Box from '@mui/material/Box';\r\n\r\nexport const Setup = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [firstname, setFirstname] = useState('');\r\n    const [lastname, setLastname] = useState('');\r\n\r\n    const setUp = (e) => {\r\n        e.preventDefault();\r\n        axios.post('http://localhost:8080/api/auth/sign-up', {\r\n            email: email,\r\n            password: password,\r\n            firstname: firstname,\r\n            lastname: lastname\r\n        }).then(function (response) {\r\n            console.log(response);\r\n        }).catch(function (error) {\r\n            alert(error.response.data.message);\r\n        });\r\n    }\r\n\r\n    return(\r\n        <div className=\"setup\"> \r\n            <Box display=\"flex\" flexDirection={\"column\"} maxWidth={400} margin=\"auto\" marginTop={10} marginRight={20} spacing={5} sx={{border: 2, borderRadius: '2%', borderColor: 'grey.500', p:10}}>\r\n                <h1>Setup</h1>\r\n                <TextField sx={{p:1}} id=\"outlined-basic\" label=\"email\" variant=\"outlined\" type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)}/> \r\n                <TextField sx={{p:1}} id=\"outlined-basic\" label=\"password\" variant=\"outlined\" type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)}/> \r\n                <TextField sx={{p:1}} id=\"outlined-basic\" label=\"firstname\" variant=\"outlined\" type=\"firstname\" value={firstname} onChange={(e) => setFirstname(e.target.value)}/> \r\n                <TextField sx={{p:1}} id=\"outlined-basic\" label=\"lastname\" variant=\"outlined\"type=\"lastname\" value={lastname} onChange={(e) => setLastname(e.target.value)}/> \r\n                <Button variant=\"contained\" onClick={setUp}>Submit</Button>\r\n                <Link sx={{p:1}} href=\"/login\" underline=\"hover\">{'Have a account? Log in now!'}</Link>\r\n            </Box>\r\n        </div>\r\n\r\n    );\r\n};","D:\\comp5347Assignment2\\5347Test\\Lab02-Tue-Group02\\frontend\\src\\pages\\Login.js",[],[],"D:\\comp5347Assignment2\\5347Test\\Lab02-Tue-Group02\\frontend\\src\\pages\\Verify.js",["76","77","78"],[],"import React, { useEffect, useState } from \"react\";\r\nimport {useSearchParams} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Button from '@mui/material/Button';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport const Verify = () => {\r\n    const [searchParams, setSearchParams] = useSearchParams();\r\n    const [status, setStatus] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    let token = searchParams.get(\"token\");\r\n    useEffect(() => {\r\n        axios.get('http://localhost:8080/api/auth/verify', {\r\n            params:{\r\n                token: token\r\n            }\r\n        }).then(function (response) {\r\n            console.log(response);\r\n            if (response.data.status == \"0\"){\r\n                setStatus(response.data.status);\r\n            }\r\n        }).catch(function (error) {\r\n            alert(error.response.data.message);\r\n        });\r\n    })\r\n    if (status == \"0\"){\r\n        return(\r\n            <div className=\"verify\">\r\n                <>Congraduation! You have successfully activated your account. You can login now!</>\r\n                <Button variant=\"contained\" onClick={() => {navigate(\"/login\")}}>Login</Button>\r\n            </div>\r\n        );\r\n    }else{\r\n        return(\r\n            <div className=\"verifyFailed\">\r\n                <>Link is incorrect or has expired</>\r\n                <Button variant=\"contained\" onClick={() => {navigate(\"/login\")}}>Login</Button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    \r\n};","D:\\comp5347Assignment2\\5347Test\\Lab02-Tue-Group02\\frontend\\src\\pages\\ResetPassword.js",["79"],[],"import React, { useState } from \"react\";\r\nimport axios from 'axios';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {useSearchParams} from 'react-router-dom';\r\n\r\nexport const ResetPassword = () => {\r\n    const [password, setPassword] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const [searchParams, setSearchParams] = useSearchParams();\r\n    let token = searchParams.get(\"token\");\r\n    token = encodeURIComponent(token);\r\n    const changePassword = (e) => {\r\n        e.preventDefault();\r\n        axios.post('http://localhost:8080/api/auth/reset-password', {\r\n            token: token,\r\n            password: password\r\n        }).then(function (response) {\r\n            console.log(response);\r\n        }).catch(function (error) {\r\n            alert(error.response.data.message);\r\n        });\r\n    }\r\n\r\n    return(\r\n        <div className=\"resetPassword\">\r\n            <Box display=\"flex\" flexDirection={\"column\"} maxWidth={400} margin=\"auto\" marginTop={20} marginRight={20} spacing={5} sx={{border: 2, borderRadius: '2%', borderColor: 'grey.500', p:10}}>\r\n                <h1>Reset Password</h1>\r\n                <TextField sx={{p:1}} id=\"outlined-basic\" label=\"password\" variant=\"outlined\" type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)}/> \r\n                <Button variant=\"contained\" onClick={changePassword}>Confirm</Button>\r\n                <Button variant=\"contained\" onClick={() => {navigate(\"/login\")}}>Cancel</Button>\r\n            </Box>\r\n        </div>\r\n        );        \r\n    \r\n\r\n};","D:\\comp5347Assignment2\\5347Test\\Lab02-Tue-Group02\\frontend\\src\\pages\\ResetEmail.js",[],[],"D:\\comp5347Assignment2\\5347Test\\Lab02-Tue-Group02\\frontend\\src\\pages\\Checkout.js",["80","81","82","83"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { Box, Button, Typography, Grid, TextField } from \"@mui/material\";\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { cartArr,catArrWithBasePrice } from \"./store\";\r\nimport { useRecoilState } from \"recoil\";\r\n\r\n\r\n\r\n// const initialPhoneData = [\r\n//   { title: 'iPhone 13', price: '$699', basePrice: '$699', quantity: 1, stock: 7 },\r\n//   { title: 'Samsung Galaxy S21', price: '$799', basePrice: '$799', quantity: 1, stock: 8 },\r\n//   { title: 'Nokia 69', price: '$499', basePrice: '$499', quantity: 1, stock: 10 },\r\n//   { title: 'Huawei Mate 50 Pro', price: '$899', basePrice: '$899', quantity: 1, stock: 9 },\r\n//   // 更多手机...\r\n// ];\r\n\r\n\r\n\r\nexport const Checkout = () => {\r\n  const [phoneData, setPhoneData] = useRecoilState(cartArr);\r\n  console.log(phoneData)\r\n  const location = useLocation();\r\n  const data = location.state;\r\n\r\n  // const initialPhoneData = data.map((item) => {\r\n  //   return {\r\n  //     ...item,\r\n  //     basePrice: item.price, // 将 title 设置为与 _id 相同的值\r\n  //   };\r\n  // });\r\n\r\n  // const initialPhoneData = JSON.parse(localStorage.getItem('cart') || '[]');\r\n  // initialPhoneData.forEach((item) => {\r\n  //   item.basePrice = item.price;\r\n  // })\r\n\r\n\r\n  //console.log(initialPhoneData);\r\n\r\n  // const submitComment = (e, id) => {\r\n  //     \r\n  // };\r\n\r\n\r\n  //const [phoneData, setPhoneData] = useState(initialPhoneData);\r\n\r\n\r\n  // const history = useHistory();\r\n  // useEffect(() => {\r\n  //   console.log(\"UseEffect: \", phoneData);\r\n  // }, []);\r\n\r\n  const totalPrice = phoneData.reduce((sum, phone) => {\r\n    return sum + parseFloat(phone.price)\r\n  }, 0);\r\n\r\n  const handleRemove = (index) => {\r\n    const newPhoneData = [...phoneData];\r\n    newPhoneData.splice(index, 1);\r\n    setPhoneData(newPhoneData);\r\n  };\r\n\r\n\r\n  const quantityChange = (index, change) => {\r\n    const newPhoneData = [...phoneData];\r\n    // const basePrice =  newPhoneData[index].price\r\n    const newQuantity = newPhoneData[index].quantity + change;\r\n    const maxStock = newPhoneData[index].stock || Infinity; // Default to Infinity if stock is not provided\r\n\r\n    if (newQuantity < 1 || newQuantity > maxStock) return; // Do not allow quantity to go below 1 or above stock\r\n    // newPhoneData[index].quantity = newQuantity;\r\n    // newPhoneData[index].price = (parseFloat(newPhoneData[index].basePrice) * newQuantity).toFixed(2);\r\n    const updatedPhone = { ...newPhoneData[index], quantity: newQuantity };\r\n    \r\n    updatedPhone.price = (parseFloat(updatedPhone.basePrice) * newQuantity).toFixed(2);\r\n\r\n    newPhoneData[index] = updatedPhone;\r\n    setPhoneData(newPhoneData);\r\n  };\r\n\r\n  const quantityInputChange = (index, event) => {\r\n    const newQuantity = parseInt(event.target.value);\r\n    const newPhoneData = [...phoneData];\r\n    const maxStock = newPhoneData[index].stock || Infinity; // Default to Infinity if stock is not provided\r\n\r\n    if (isNaN(newQuantity) || newQuantity < 1) {\r\n      if (newQuantity === 0) {\r\n        handleRemove(index);\r\n      }\r\n      return;\r\n    }\r\n  \r\n    if (newQuantity > maxStock) return;\r\n    console.log('input', newQuantity)\r\n    const updatedPhone = { ...newPhoneData[index], quantity: newQuantity };\r\n    \r\n    updatedPhone.price = (parseFloat(updatedPhone.basePrice) * newQuantity).toFixed(2);\r\n\r\n    // newPhoneData[index].quantity = newQuantity;\r\n    // console.log('price');\r\n    // newPhoneData[index].price = (parseFloat(newPhoneData[index].basePrice) * newQuantity).toFixed(2);\r\n    // const updatedPhone = { ...newPhoneData[index], quantity: newQuantity };\r\n    // updatedPhone.price = (parseFloat(updatedPhone.basePrice) * newQuantity).toFixed(2);\r\n\r\n    newPhoneData[index] = updatedPhone;\r\n    setPhoneData(newPhoneData);\r\n  };\r\n\r\n  const handlePay = (e) => {\r\n    e.preventDefault();\r\n    // Push to back end\r\n    axios.post('http://localhost:8080/api/home/checkout', {\r\n      // stocks:stock,\r\n      phone: phoneData,\r\n    }).then(function (response) {\r\n      console.log(response);\r\n    }).catch(function (error) {\r\n      alert(error.response.data.message);\r\n    });\r\n    setPhoneData([]); // empty data\r\n    console.log('sucess submit');\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        position: 'relative',\r\n        display: 'flex',\r\n        justifyContent: 'flex-start',\r\n        alignItems: 'flex-start',\r\n        height: '100vh',\r\n        padding: '10px',\r\n      }}\r\n    >\r\n      <Link to=\"/\">\r\n        <Button variant=\"contained\" color=\"primary\">\r\n          Back\r\n        </Button>\r\n      </Link>\r\n      <Grid\r\n        container\r\n        spacing={2} // 设置网格间的间距\r\n        alignItems=\"center\"\r\n        sx={{ marginTop: '10px' }} // 为了有些间隙在按钮和这行之间\r\n      >\r\n        {phoneData.map((phone, index) => (\r\n          <Grid container item xs={12} key={index} direction=\"row\">\r\n            <Grid item xs>\r\n              {console.log(phone.title)}\r\n              <Typography variant=\"body1\">{phone.title}</Typography>\r\n            </Grid>\r\n            <Grid item xs>\r\n              <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\r\n                <Button variant=\"contained\" onClick={() => quantityChange(index, -1)}>-</Button>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  value={phone.quantity}\r\n                  onChange={(event) => quantityInputChange(index, event)}\r\n                  inputProps={{ style: { textAlign: 'center' } }}\r\n                  sx={{ mx: 3, width: '50px' }}\r\n                />\r\n                <Button variant=\"contained\" onClick={() => quantityChange(index, 1)}>+</Button>\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs>\r\n              <Typography variant=\"body1\">Price: {phone.price}</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button variant=\"contained\" color=\"error\" onClick={() => handleRemove(index)}>Remove</Button>\r\n            </Grid>\r\n          </Grid>\r\n\r\n        ))}\r\n        <Grid container item xs={12} direction=\"row\">\r\n          <Grid container justifyContent=\"flex-end\">\r\n            <Grid item xs={5}>\r\n              <Typography variant=\"body1\">$Total: {totalPrice.toFixed(2)}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container justifyContent=\"flex-end\">\r\n          <Link to='/'>\r\n            <Button variant=\"contained\" color=\"success\" onClick={(e) => handlePay(e)}>Submit Order</Button>\r\n          </Link>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};","D:\\comp5347Assignment2\\5347Test\\Lab02-Tue-Group02\\frontend\\src\\pages\\Home.js",["84","85","86","87","88","89"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Button from '@mui/material/Button';\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\r\nimport SearchBar from \"../components/SearchBar\";\r\nimport { ItemState } from \"../components/ItemState\";\r\nimport Grid from '@mui/material/Grid';\r\nimport { useRecoilState } from \"recoil\";\r\nimport { cartArr,catArrWithBasePrice } from \"./store\";\r\n\r\n\r\nexport const Home = () => {\r\n\r\n    const navigate = useNavigate();\r\n    const [data, setData] = useState([]);\r\n    const [brand, setBrand] = useState({ list: [] });\r\n    const [soldOut, setsSoldOut] = useState([]);\r\n    const [best, setBest] = useState([]);\r\n    // const [cartArray, setCartArray] = useState([]);\r\n    const [cartArray, setCartArray] = useRecoilState(catArrWithBasePrice);\r\n\r\n    // Get response, all phone data,  from backend\r\n    useEffect(() => {\r\n        axios.get('http://localhost:8080/api/home/home', {\r\n        }).then(function (response) {\r\n            const temp = response;\r\n            const temp2 = temp.data;\r\n\r\n            setData(temp2.data.list);\r\n            setBrand(temp2.data.brands);\r\n            setsSoldOut(temp2.data.listSoldOut);\r\n            setBest(temp2.data.listBest);\r\n\r\n        }).catch(function (error) {\r\n            alert(error.response.data.message);\r\n        });\r\n    }, []);\r\n\r\n    const handleClick = () => {\r\n        const checkoutData = cartArray; // get cart data\r\n        navigate(\"/checkout\", { state: checkoutData });\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log(cartArray);\r\n    }, [cartArray]);\r\n\r\n    return (\r\n        <Grid container spacing={2} justifyContent=\"space-between\" alignItems=\"center\">\r\n            <Grid item>\r\n                <SearchBar cartArray={cartArray} setCartArray={setCartArray} />\r\n            </Grid>\r\n            <Grid item style={{ marginRight: '80px', position: 'fixed', top: '50px', right: '20px' }}>\r\n\r\n                <Button onClick={handleClick} variant=\"contained\" size='small'>Checkout</Button>\r\n\r\n            </Grid>\r\n\r\n            <Grid item xs={12} container justifyContent=\"flex-start\" alignItems=\"flex-start\" style={{marginLeft:'30px'}}>\r\n                <h2>Sold Out Soon:</h2>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                    <ItemState cartArray={cartArray} setCartArray={setCartArray} phoneList={soldOut} />\r\n            </Grid>\r\n            <Grid item xs={12} container justifyContent=\"flex-start\" alignItems=\"flex-start\" style={{marginLeft:'30px'}}>\r\n                <h2>Best Seller:</h2>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <ItemState cartArray={cartArray} setCartArray={setCartArray} phoneList={best} />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n\r\n};\r\n\r\n","D:\\comp5347Assignment2\\5347Test\\Lab02-Tue-Group02\\frontend\\src\\components\\SearchBar.js",["90","91","92","93"],[],"import React, { useEffect, useState } from \"react\";\r\n//import {Navbar, Container, Row, Col, FormControl, Button, InputGroup } from 'react-bootstrap';\r\nimport Button from '@mui/material/Button';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport axios from 'axios';\r\nimport { ItemState } from \"./ItemState\";\r\n\r\nconst SearchBar = ({ cartArray, setCartArray }) => {\r\n\r\n  const [data, setData] = useState([]);\r\n  const [brands, setBrand] = useState({ list: [] });\r\n  const [selectedBrand, setSelectedBrand] = useState('');\r\n  const [filteredSearchData, setFilteredSearchData] = useState([]);\r\n\r\n  const [maxPrice, setMaxPrice] = useState(500);\r\n\r\n  const [search, setSearch] = useState(false);\r\n\r\n  const [searchTerm, setSearchTerm] = useState(\"\"); // For maintain the state of search value\r\n\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:8080/api/home/home', {\r\n    }).then(function (response) {\r\n      const temp = response;\r\n      const temp2 = temp.data;\r\n\r\n      setData(temp2.data.list);\r\n      setBrand(temp2.data.brands);\r\n\r\n    }).catch(function (error) {\r\n      alert(error.response.data.message);\r\n    });\r\n  }, []);\r\n\r\n\r\n\r\n  const handleChangeSelect = (event) => {\r\n    setSelectedBrand(event.target.value);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setMaxPrice(event.target.value);\r\n  };\r\n  const handleSearch = () => {\r\n  \r\n      if (searchTerm && searchTerm.trim() !== '') {\r\n        setSearch(true);\r\n      } else {\r\n        setSearch(false);\r\n      }\r\n      \r\n    \r\n\r\n  };\r\n\r\n  const handleSearchOut = () => {\r\n    setSearch(false);\r\n  };\r\n\r\n\r\n  const filteredData = data.filter(i => i.title.toLowerCase().includes(searchTerm.toLowerCase())).filter(i => i.price <= maxPrice).filter(i => !selectedBrand || i.brand === selectedBrand);\r\n\r\n  return search ? (\r\n    <Grid container direction=\"column\" justifyContent=\"flex-start\" alignItems=\"flex-start\">\r\n      <Grid item style={{ marginLeft: '30px' }}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search...\"\r\n          value={searchTerm}\r\n          onChange={e => setSearchTerm(e.target.value)}\r\n          style={{\r\n            width: '200px',\r\n            height: '25px',\r\n            fontSize: '16px',\r\n          }}\r\n        />\r\n        <Button variant=\"contained\" size='small' onClick={handleSearch}>Search</Button>\r\n      </Grid>\r\n      <Grid item style={{ marginLeft: '30px' }}>\r\n        <select value={selectedBrand} onChange={handleChangeSelect}>\r\n          <option value=\"\">All</option>\r\n          {brands.map(brand => (\r\n            <option key={brand} value={brand}>{brand}</option>\r\n          ))}\r\n        </select>\r\n      </Grid>\r\n      <Grid item style={{ marginLeft: '27px' }}>\r\n        <input\r\n          type=\"range\"\r\n          min=\"0\"\r\n          max=\"500\"\r\n          value={maxPrice}\r\n          onChange={handleChange}\r\n          style={{ width: '100%' }}\r\n        />\r\n        <p>Max price: {maxPrice}</p >\r\n      </Grid>\r\n      <Grid item >\r\n        <ItemState cartArray={cartArray} setCartArray={setCartArray} phoneList={filteredData} />\r\n      </Grid>\r\n    </Grid>\r\n  ) : (\r\n    <Grid container direction=\"column\" justifyContent=\"flex-start\" alignItems=\"flex-start\">\r\n      <Grid item style={{ marginLeft: '30px' }}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search...\"\r\n          value={searchTerm}\r\n          onChange={e => setSearchTerm(e.target.value)}\r\n          style={{\r\n            width: '200px',\r\n            height: '25px',\r\n            fontSize: '16px',\r\n          }}\r\n        />\r\n        <Button variant=\"contained\" size='small' onClick={handleSearch}>Search</Button>\r\n\r\n      </Grid>\r\n      <Grid item>\r\n        <ItemState cartArray={cartArray} setCartArray={setCartArray} phoneList={filteredSearchData} />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n\r\n};\r\n\r\nexport default SearchBar;","D:\\comp5347Assignment2\\5347Test\\Lab02-Tue-Group02\\frontend\\src\\components\\ItemState.js",["94","95","96","97","98"],[],"import React, { useEffect, useState } from \"react\";\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Rating from \"@mui/material/Rating\";\r\nimport Button from '@mui/material/Button';\r\nimport axios from 'axios';\r\n\r\n  \r\n\r\nexport const ItemState = ({cartArray, setCartArray, phoneList}) =>{\r\n    const [openDialogId, setOpenDialogId] = useState(null);\r\n    const [reviewList, setReviewList] = useState([]);\r\n    const [isExpanded, setIsExpanded] = useState({});\r\n    const [numDisplayed, setNumDisplayed] = useState({});\r\n    const [quantity, setQuantity] = useState(0);\r\n    const [comment, setComment] = useState(\"\");\r\n    const [rating, setRating] = useState(0);\r\n    const [quantities, setQuantities] = useState({});\r\n\r\n  \r\n    const handleClickOpen = (id) => {\r\n     setOpenDialogId(id);\r\n     const temList = phoneList.filter(i => i._id === id);\r\n     setReviewList(temList);\r\n    };\r\n   \r\n    const handleClose = () => {\r\n     setOpenDialogId(null);\r\n    };\r\n   \r\n    //const [isExpanded, setIsExpanded] = useState(false);\r\n    // const handleShowMore = () => {\r\n    //  setIsExpanded(true);\r\n    // };\r\n\r\n    const handleShowMore = (id) => {\r\n        setIsExpanded({\r\n          ...isExpanded,\r\n          [id]: true,\r\n        });\r\n      };\r\n   \r\n    //const [numDisplayed, setNumDisplayed] = useState(3);\r\n   \r\n    // const handleShowMoreReviews = () => {\r\n    //  setNumDisplayed(numDisplayed + 3);\r\n    //  };\r\n\r\n    const handleShowMoreReviews = (id) => {\r\n        setNumDisplayed({\r\n          ...numDisplayed,\r\n          [id]: numDisplayed[id] ? numDisplayed[id] + 3 : 3,\r\n        });\r\n      };\r\n    \r\n    const addToCart = (id) => {\r\n        const temList = phoneList.filter(i => i._id === id);\r\n        console.log(temList[0].stock);\r\n        const inputQuantity = parseInt(prompt(\"Enter quantity: \"), 10);\r\n        if (!isNaN(inputQuantity) && inputQuantity > 0 && temList[0].stock >= inputQuantity) {\r\n            temList[0].quantity = inputQuantity;\r\n            // setQuantity(inputQuantity);\r\n            setQuantities({\r\n                ...quantities,\r\n                [id]: inputQuantity,  // Update quantity for this item\r\n            });\r\n        }else{\r\n            alert(\"No enough stock ! \");\r\n        }\r\n\r\n        setCartArray([...cartArray, ...temList]);\r\n    };\r\n\r\n    const submitComment = (e, id) => {\r\n        e.preventDefault();\r\n        // Push to back end\r\n        axios.post('http://localhost:8080/api/home/comment', {\r\n            reviewers: \"Zinc\",\r\n            comments:comment,\r\n            ratings:rating,\r\n            phoneID: id\r\n        }).then(function (response) {\r\n            console.log(response);\r\n        }).catch(function (error) {\r\n            alert(error.response.data.message);\r\n        });\r\n        console.log(`Comment: ${comment}`);\r\n        console.log(`Rating: ${rating}`);\r\n        console.log(`phoneID: ${id}`);\r\n        // Reset comment and rating\r\n        setComment(\"\");\r\n        setRating(0);\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     console.log(cartArray);\r\n    //   }, [cartArray]);\r\n  \r\n     return (\r\n     <div>\r\n     <div className=\"image-container\" style={{ display: 'flex' }}>\r\n     {phoneList.map((i)=> (\r\n       <div key={i._id} >\r\n        <img onClick={() => handleClickOpen(i._id)} src={`/${i.image}`} style={{ height: \"100px\", width: \"100px\" }}/>\r\n        <Dialog open={openDialogId === i._id} onClose={handleClose}>\r\n         <DialogTitle>Detail of Phone</DialogTitle>\r\n         <DialogContent>\r\n          {/* <div>Current quantity: {quantity}</div> */}\r\n          <div>Current quantity: {quantities[i._id] || 0}</div>\r\n          <div>\r\n            <Button variant=\"contained\" onClick={() => addToCart(i._id)}>\r\n                Add to Cart\r\n            </Button>\r\n            </div>\r\n          <p>Title: {i.title}</p >\r\n          <p>Brand: {i.brand}</p >\r\n          < img src={`/${i.image}`} style={{ height: \"100px\", width: \"100px\" }}/>\r\n          <p>Stock: {i.stock}</p >\r\n          {/* <p>Seller: {i.seller.firstname} {i.seller.lastname}</p > */}\r\n          <p>Seller: {i.seller ? i.seller.firstname : 'Unknown'} {i.seller ? i.seller.lastname : ''}</p >\r\n\r\n          <p>Price: {i.price}</p >\r\n         <div>\r\n          {reviewList.map((item, index) => (\r\n           //item.reviews.slice(0, numDisplayed).map((review, i) => (\r\n            item.reviews.slice(0, numDisplayed[item._id] || 3).map((review, i) => (\r\n            <div key={i}>\r\n             {/* <p>Reviewer: {review.reviewer.firstname} {review.reviewer.lastname}</p > */}\r\n             <p>Reviewer: {review.reviewer ? review.reviewer.firstname : 'Unknown'} {review.reviewer ? review.reviewer.lastname : ''}</p >\r\n\r\n             {/* <p>Rating: {review.rating}</p > */}\r\n\r\n             <Rating\r\n                name=\"simple-controlled\"\r\n                value={review.rating}\r\n            />\r\n             <div>\r\n                {console.log(review)}\r\n                <p>\r\n                    {isExpanded[review.reviewer._id] || !review.comment ? review.comment : review.comment.substring(0, 200)}\r\n                </p >\r\n                {review.comment && review.comment.length > 200 && !isExpanded[review.reviewer._id] && (\r\n                    <Button variant=\"contained\" onClick={() => handleShowMore(review.reviewer._id)}>Show More</Button>\r\n                )}\r\n\r\n             </div>\r\n            </div>\r\n           ))\r\n          ))}\r\n          <div>\r\n          <Button variant=\"contained\" onClick={() => handleShowMoreReviews(i._id)}>Show More Reviews</Button>\r\n          </div>\r\n          <div>\r\n\r\n            <div>\r\n            <TextField\r\n                label=\"Comment\"\r\n                value={comment}\r\n                onChange={(e) => setComment(e.target.value)}\r\n            />\r\n            <Rating\r\n                name=\"simple-controlled\"\r\n                value={rating}\r\n                onChange={(event, newValue) => {\r\n                setRating(newValue);\r\n                }}\r\n            />\r\n            <Button variant=\"contained\" onClick={(e) => submitComment(e, i._id)}>\r\n                Submit Comment\r\n            </Button>\r\n            </div>\r\n            </div>\r\n         </div>\r\n         </DialogContent>\r\n        </Dialog>\r\n        {i.stock > 0 && (\r\n        <>\r\n            <br />\r\n            <span>{i.title}</span>\r\n            <span style={{ fontSize: \"20px\", color: \"red\", padding: \"0 20px\" }}>\r\n            ${i.price}\r\n            </span>\r\n            <br />\r\n        </>\r\n        )}\r\n       </div>\r\n      ))}\r\n     </div>\r\n     </div>\r\n  \r\n   )}","D:\\comp5347Assignment2\\5347Test\\Lab02-Tue-Group02\\frontend\\src\\pages\\store.js",[],[],{"ruleId":"99","severity":1,"message":"100","line":1,"column":27,"nodeType":"101","messageId":"102","endLine":1,"endColumn":36},{"ruleId":"99","severity":1,"message":"103","line":8,"column":26,"nodeType":"101","messageId":"102","endLine":8,"endColumn":41},{"ruleId":"104","severity":1,"message":"105","line":20,"column":38,"nodeType":"106","messageId":"107","endLine":20,"endColumn":40},{"ruleId":"104","severity":1,"message":"105","line":27,"column":16,"nodeType":"106","messageId":"107","endLine":27,"endColumn":18},{"ruleId":"99","severity":1,"message":"103","line":13,"column":26,"nodeType":"101","messageId":"102","endLine":13,"endColumn":41},{"ruleId":"99","severity":1,"message":"108","line":1,"column":17,"nodeType":"101","messageId":"102","endLine":1,"endColumn":25},{"ruleId":"99","severity":1,"message":"100","line":1,"column":27,"nodeType":"101","messageId":"102","endLine":1,"endColumn":36},{"ruleId":"99","severity":1,"message":"109","line":5,"column":18,"nodeType":"101","messageId":"102","endLine":5,"endColumn":37},{"ruleId":"99","severity":1,"message":"110","line":24,"column":9,"nodeType":"101","messageId":"102","endLine":24,"endColumn":13},{"ruleId":"99","severity":1,"message":"111","line":2,"column":10,"nodeType":"101","messageId":"102","endLine":2,"endColumn":25},{"ruleId":"99","severity":1,"message":"112","line":5,"column":23,"nodeType":"101","messageId":"102","endLine":5,"endColumn":27},{"ruleId":"99","severity":1,"message":"113","line":6,"column":8,"nodeType":"101","messageId":"102","endLine":6,"endColumn":24},{"ruleId":"99","severity":1,"message":"114","line":11,"column":10,"nodeType":"101","messageId":"102","endLine":11,"endColumn":17},{"ruleId":"99","severity":1,"message":"110","line":17,"column":12,"nodeType":"101","messageId":"102","endLine":17,"endColumn":16},{"ruleId":"99","severity":1,"message":"115","line":18,"column":12,"nodeType":"101","messageId":"102","endLine":18,"endColumn":17},{"ruleId":"99","severity":1,"message":"116","line":5,"column":8,"nodeType":"101","messageId":"102","endLine":5,"endColumn":11},{"ruleId":"99","severity":1,"message":"117","line":6,"column":8,"nodeType":"101","messageId":"102","endLine":6,"endColumn":19},{"ruleId":"99","severity":1,"message":"118","line":15,"column":30,"nodeType":"101","messageId":"102","endLine":15,"endColumn":51},{"ruleId":"99","severity":1,"message":"119","line":59,"column":9,"nodeType":"101","messageId":"102","endLine":59,"endColumn":24},{"ruleId":"99","severity":1,"message":"100","line":1,"column":17,"nodeType":"101","messageId":"102","endLine":1,"endColumn":26},{"ruleId":"99","severity":1,"message":"120","line":17,"column":12,"nodeType":"101","messageId":"102","endLine":17,"endColumn":20},{"ruleId":"99","severity":1,"message":"121","line":17,"column":22,"nodeType":"101","messageId":"102","endLine":17,"endColumn":33},{"ruleId":"122","severity":1,"message":"123","line":106,"column":9,"nodeType":"124","endLine":106,"endColumn":118},{"ruleId":"122","severity":1,"message":"123","line":119,"column":11,"nodeType":"124","endLine":119,"endColumn":82},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'setSearchParams' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","'catArrWithBasePrice' is defined but never used.","'data' is assigned a value but never used.","'useSearchParams' is defined but never used.","'Link' is defined but never used.","'ShoppingCartIcon' is defined but never used.","'cartArr' is defined but never used.","'brand' is assigned a value but never used.","'Box' is defined but never used.","'ButtonGroup' is defined but never used.","'setFilteredSearchData' is assigned a value but never used.","'handleSearchOut' is assigned a value but never used.","'quantity' is assigned a value but never used.","'setQuantity' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]